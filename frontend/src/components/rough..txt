<template>
  <div class="dashboard" @click="closeNavbar">
    <!-- Animated background -->
    <div class="background-overlay">
      <div class="floating-shapes">
        <div class="shape shape-1"></div>
        <div class="shape shape-2"></div>
        <div class="shape shape-3"></div>
        <div class="shape shape-4"></div>
      </div>
    </div>

    <!-- Navigation toggle -->
    <div class="navbar-toggle" @click.stop="toggleNavbar">
      <div class="hamburger" :class="{ active: isNavbarOpen }">
        <span></span>
        <span></span>
        <span></span>
      </div>
    </div>

    <!-- Side navigation -->
    <div class="navbar-overlay" :class="{ open: isNavbarOpen }" @click="closeNavbar"></div>
    <nav class="navbar" :class="{ open: isNavbarOpen }">
      <div class="navbar-header">
        <h3>Menu</h3>
      </div>
      <div class="navbar-content">
        <button class="navbar-item" @click="handleNavClick('profile')">
          <div class="nav-icon">üë§</div>
          <span>Profile</span>
        </button>
        <button class="navbar-item" @click="handleNavClick('pro')">
          <div class="nav-icon">‚≠ê</div>
          <span>Buy Pro</span>
        </button>
        <button class="navbar-item logout" @click="handleNavClick('logout')">
          <div class="nav-icon">üö™</div>
          <span>Logout</span>
        </button>
      </div>
    </nav>

    <!-- Main content -->
    <div class="content">
      <div class="greeting-container">
        <h1 class="greeting-text" :key="animatedText">{{ animatedText }}</h1>
        <div class="subtitle">Powered by AI ‚Ä¢ Fast ‚Ä¢ Accurate</div>
      </div>
    </div>

    <!-- Query input section -->
    <div class="query-section">
      <div class="query-container">
        <div class="input-wrapper">
          <textarea
            v-model="textQuery"
            placeholder="Ask me anything..."
            class="query-input"
            @keydown.enter.prevent="submitQuery"
            @focus="isInputFocused = true"
            @blur="isInputFocused = false"
            rows="1"
          ></textarea>
          <button 
            class="send-button" 
            @click="submitQuery"
            :disabled="!textQuery.trim()"
            :class="{ active: textQuery.trim() }"
          >
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor">
              <path d="m22 2-7 20-4-9-9-4 20-7z"/>
            </svg>
          </button>
        </div>
      </div>
      <div class="quick-suggestions">
        <button 
          v-for="suggestion in suggestions" 
          :key="suggestion"
          class="suggestion-chip"
          @click="selectSuggestion(suggestion)"
        >
          {{ suggestion }}
        </button>
      </div>
    </div>
  </div>
</template>

<script>
export default {
  name: 'DashboardPage',
  data() {
    return {
      textQuery: '',
      isNavbarOpen: false,
      isInputFocused: false,
      animatedText: 'Welcome to the Future of AI',
      textOptions: [
        'Welcome to the Future of AI',
        'Ask Anything, Get Everything',
        'Intelligent Answers in Seconds',
        'Your AI Assistant Awaits'
      ],
      textIndex: 0,
      suggestions: [
        'How does AI work?',
        'Write a creative story',
        'Explain quantum physics',
        'Plan my day'
      ]
    };
  },
  methods: {
    toggleNavbar() {
      this.isNavbarOpen = !this.isNavbarOpen;
    },
    closeNavbar() {
      this.isNavbarOpen = false;
    },
    handleClickOutside(event) {
      const navbar = this.$el.querySelector('.navbar');
      const toggleButton = this.$el.querySelector('.navbar-toggle');
      if (this.isNavbarOpen && !navbar.contains(event.target) && !toggleButton.contains(event.target)) {
        this.closeNavbar();
      }
    },
    submitQuery() {
      if (!this.textQuery.trim()) return;
      console.log('Query:', this.textQuery);
      // Add loading state or redirect logic here
      this.textQuery = '';
    },
    selectSuggestion(suggestion) {
      this.textQuery = suggestion;
      this.submitQuery();
    },
    handleNavClick(action) {
      console.log(`${action} clicked`);
      this.closeNavbar();
      // Add navigation logic here
    },
    cycleText() {
      this.textIndex = (this.textIndex + 1) % this.textOptions.length;
      this.animatedText = this.textOptions[this.textIndex];
    },
    autoResizeTextarea() {
      const textarea = this.$el.querySelector('.query-input');
      if (textarea) {
        textarea.style.height = 'auto';
        textarea.style.height = Math.min(textarea.scrollHeight, 120) + 'px';
      }
    }
  },
  watch: {
    textQuery() {
      this.$nextTick(() => {
        this.autoResizeTextarea();
      });
    }
  },
  mounted() {
    document.addEventListener('click', this.handleClickOutside);
    this.textCycleInterval = setInterval(this.cycleText, 4000);
  },
  beforeUnmount() {
    document.removeEventListener('click', this.handleClickOutside);
    clearInterval(this.textCycleInterval);
  }
};
</script>

<style scoped>
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');

* {
  box-sizing: border-box;
}

.dashboard {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  height: 100vh;
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  position: relative;
  overflow: hidden;
}

/* Animated background */
.background-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  overflow: hidden;
  z-index: 0;
}

.floating-shapes {
  position: absolute;
  width: 100%;
  height: 100%;
}

.shape {
  position: absolute;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  animation: floating 6s ease-in-out infinite;
}

.shape-1 {
  width: 80px;
  height: 80px;
  top: 20%;
  left: 10%;
  animation-delay: 0s;
}

.shape-2 {
  width: 120px;
  height: 120px;
  top: 60%;
  right: 20%;
  animation-delay: 2s;
}

.shape-3 {
  width: 60px;
  height: 60px;
  bottom: 30%;
  left: 20%;
  animation-delay: 4s;
}

.shape-4 {
  width: 100px;
  height: 100px;
  top: 10%;
  right: 30%;
  animation-delay: 1s;
}

@keyframes floating {
  0%, 100% { transform: translateY(0px) rotate(0deg); }
  50% { transform: translateY(-20px) rotate(180deg); }
}

/* Navigation */
.navbar-toggle {
  position: fixed;
  top: 24px;
  right: 24px;
  z-index: 1001;
  cursor: pointer;
  padding: 8px;
}

.hamburger {
  display: flex;
  flex-direction: column;
  width: 24px;
  height: 18px;
  justify-content: space-between;
  cursor: pointer;
}

.hamburger span {
  display: block;
  height: 2px;
  width: 100%;
  background: white;
  border-radius: 1px;
  transition: all 0.3s ease;
}

.hamburger.active span:nth-child(1) {
  transform: rotate(45deg) translate(6px, 6px);
}

.hamburger.active span:nth-child(2) {
  opacity: 0;
}

.hamburger.active span:nth-child(3) {
  transform: rotate(-45deg) translate(6px, -6px);
}

.navbar-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  backdrop-filter: blur(4px);
  opacity: 0;
  visibility: hidden;
  transition: all 0.3s ease;
  z-index: 999;
}

.navbar-overlay.open {
  opacity: 1;
  visibility: visible;
}

.navbar {
  position: fixed;
  top: 0;
  right: 0;
  height: 100vh;
  width: 320px;
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(20px);
  transform: translateX(100%);
  transition: transform 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  z-index: 1000;
  display: flex;
  flex-direction: column;
  box-shadow: -10px 0 40px rgba(0, 0, 0, 0.1);
}

.navbar.open {
  transform: translateX(0);
}

.navbar-header {
  padding: 32px 24px 24px;
  border-bottom: 1px solid rgba(0, 0, 0, 0.1);
}

.navbar-header h3 {
  margin: 0;
  font-size: 24px;
  font-weight: 600;
  color: #333;
}

.navbar-content {
  flex: 1;
  padding: 24px;
  display: flex;
  flex-direction: column;
  gap: 12px;
}

.navbar-item {
  display: flex;
  align-items: center;
  gap: 16px;
  background: transparent;
  border: none;
  padding: 16px 20px;
  border-radius: 12px;
  font-size: 16px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.3s ease;
  color: #333;
  text-align: left;
}

.navbar-item:hover {
  background: rgba(102, 126, 234, 0.1);
  transform: translateX(4px);
}

.navbar-item.logout {
  color: #ef4444;
  margin-top: auto;
}

.navbar-item.logout:hover {
  background: rgba(239, 68, 68, 0.1);
}

.nav-icon {
  font-size: 20px;
  width: 24px;
  text-align: center;
}

/* Main content */
.content {
  flex: 1;
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1;
  padding: 0 24px;
}

.greeting-container {
  text-align: center;
  max-width: 800px;
}

.greeting-text {
  font-size: clamp(2rem, 6vw, 4rem);
  font-weight: 700;
  color: white;
  margin: 0 0 16px 0;
  line-height: 1.2;
  animation: slideUp 0.8s ease-out;
  text-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
}

.subtitle {
  font-size: 18px;
  color: rgba(255, 255, 255, 0.8);
  font-weight: 400;
  animation: slideUp 0.8s ease-out 0.2s both;
}

@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Query section */
.query-section {
  z-index: 1;
  padding: 0 24px 32px;
  max-width: 800px;
  margin: 0 auto;
  width: 100%;
}

.query-container {
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(20px);
  border-radius: 20px;
  padding: 8px;
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
  transition: all 0.3s ease;
  border: 1px solid rgba(255, 255, 255, 0.2);
}

.query-container:focus-within {
  transform: translateY(-2px);
  box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15);
}

.input-wrapper {
  display: flex;
  align-items: flex-end;
  gap: 12px;
}

.query-input {
  flex: 1;
  border: none;
  outline: none;
  font-size: 16px;
  font-weight: 400;
  padding: 16px 20px;
  background: transparent;
  resize: none;
  line-height: 1.5;
  color: #333;
  min-height: 56px;
  max-height: 120px;
  font-family: inherit;
}

.query-input::placeholder {
  color: #999;
}

.send-button {
  ##background: linear-gradient(135deg, #000310 0%, #531296 100%);
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  border: none;
  border-radius: 12px;
  padding: 16px;
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  opacity: 0.5;
  transform: scale(0.9);
}

.send-button:disabled {
  cursor: not-allowed;
}

.send-button.active {
  opacity: 1;
  transform: scale(1);
}

.send-button:hover:not(:disabled) {
  transform: scale(1.05);
  box-shadow: 0 8px 20px rgba(102, 126, 234, 0.4);
}

/* Quick suggestions */
.quick-suggestions {
  display: flex;
  gap: 12px;
  margin-top: 16px;
  flex-wrap: wrap;
  justify-content: center;
}

.suggestion-chip {
  background: rgba(255, 255, 255, 0.2);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.3);
  border-radius: 20px;
  padding: 8px 16px;
  font-size: 14px;
  color: white;
  cursor: pointer;
  transition: all 0.3s ease;
  font-weight: 400;
}

.suggestion-chip:hover {
  background: rgba(255, 255, 255, 0.3);
  transform: translateY(-2px);
}

/* Responsive design */
@media (max-width: 768px) {
  .navbar {
    width: 100vw;
    max-width: 320px;
  }
  
  .query-section {
    padding: 0 16px 24px;
  }
  
  .content {
    padding: 0 16px;
  }
  
  .greeting-text {
    font-size: clamp(1.5rem, 8vw, 2.5rem);
  }
  
  .subtitle {
    font-size: 16px;
  }
  
  .quick-suggestions {
    gap: 8px;
  }
  
  .suggestion-chip {
    font-size: 13px;
    padding: 6px 12px;
  }
}

@media (max-width: 480px) {
  .navbar-toggle {
    top: 16px;
    right: 16px;
  }
  
  .query-input {
    font-size: 16px; /* Prevents zoom on iOS */
  }
}
</style>
    